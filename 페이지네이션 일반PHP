<head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"></head>

<?php
	require_once $_SERVER['DOCUMENT_ROOT'] . '/api/connectionDB.php';

	class Pagination{
		//클래스 내부에서 하단 페이지넘버 처리에 필요한 변수
		private
		$page,
		$total_page,
		$first_page,
		$last_page,
		$prev_page,
		$next_page,
		$total_block,
		$next_block,
		$next_block_page,
		$prev_block,
		$prev_block_page,
		$PHP_SELF = "./test4.php"; //설정에서 register_globals=Off 인 경우에 $PHP_SELF 수퍼변수는 동작하지 않기때문에 안되면 지정
		
		//클래스 외부에서 필요한 변수
		public
		$limit_idx,
		$page_set;
		  
		//페이지 줄수, 블럭수, 데이터베이스이름을 받아 데이터 정리
		public function __construct($pg, $bl, $dbName, $con) {
			
			//외부 데이터베이스 접속정보 선언
			$connect = $con;

			$this->page_set = $pg; // 한페이지 줄수
			$block_set = $bl; // 한페이지 블럭수
			$query = 'SELECT count(idx) AS total FROM ' . $dbName;
	 
			$stmt = $connect->prepare($query);
			$stmt->execute();
			$result = $stmt->fetch(PDO::FETCH_ASSOC);
			$total = $result['total']; // 전체글수
		
			$this->total_page = ceil($total / $this->page_set); // 총페이지수(올림함수)
			$this->total_block = ceil($this->total_page / $block_set); // 총블럭수(올림함수)
		
			$this->page = ($_GET['pg']) ? $_GET['pg'] : 1; //파라미터로 현재 페이지정보를 받아옴
			$block = ceil($this->page/$block_set); // 현재블럭(올림함수)
			$this->limit_idx = ($this->page - 1) * $this->page_set; // limit시작위치
		
			$this->first_page = (($block - 1) * $block_set) + 1; // 첫번째 페이지번호
			$this->last_page = min ($this->total_page, $block * $block_set); // 마지막 페이지번호
	   
			$this->prev_page = $this->page - 1; // 이전페이지
			$this->next_page = $this->page + 1; // 다음페이지
		
			$this->prev_block = $block - 1; // 이전블럭
			$this->next_block = $block + 1; // 다음블럭
		
			// 이전블럭을 블럭의 마지막으로 하려면...
			$this->prev_block_page = $this->prev_block * $block_set; // 이전블럭 페이지번호    
		
			// 이전블럭을 블럭의 첫페이지로 하려면...
			//$prev_block_page = $prev_block * $block_set - ($block_set - 1);
		
			$this->next_block_page = $this->next_block * $block_set - ($block_set - 1); // 다음블럭 페이지번호
			
		}
		
		//하단 페이지 넘버링
		public function BottomPageNumber(){
		  
			echo ($this->prev_page > 0) ? "<a href='$this->PHP_SELF?pg=$this->prev_page'>[prev]</a> " : "[prev] ";
			echo ($this->prev_block > 0) ? "<a href='$this->PHP_SELF?pg=$this->prev_block_page'></a> " : "";

			for ($i=$this->first_page; $i<=$this->last_page; $i++) {

				echo ($i != $this->page) ? "<a href='$this->PHP_SELF?pg=$i'>$i</a> " : "<b>$i</b> ";

			}

			echo ($this->next_block <= $this->total_block) ? "<a href='$this->PHP_SELF?pg=$this->next_block_page'></a> " : "";
			echo ($this->next_page <= $this->total_page) ? "<a href='$this->PHP_SELF?pg=$this->next_page'>[next]</a>" : "[next]";
						
		}

	}

	$connectDB = new connectDB();
	$con = $connectDB -> connect;

	$dbName = "notice";
	$pagination = new Pagination(1, 5, $dbName, $con); // 페이지당 목록 수, 블록 개수, 테이블 명

	$query = 'SELECT * FROM ' . $dbName . ' ORDER BY idx DESC LIMIT ' . $pagination->limit_idx . ', ' . $pagination->page_set;
	$stmt = $con->prepare($query);
	$stmt->execute();
	$result = $stmt->fetchAll();

	foreach ($result as $row) {
	//데이터 출력
		echo $row['idx'] . $row['title'] . "<br>";
	}

	$pagination->BottomPageNumber();


?>
